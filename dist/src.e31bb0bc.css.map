{"version":3,"sources":["..\\node_modules\\hamburgers\\_sass\\hamburgers\\hamburgers.scss","..\\node_modules\\hamburgers\\_sass\\hamburgers\\_base.scss","app\\scss\\vendor\\hamburger-config.scss","..\\node_modules\\hamburgers\\_sass\\hamburgers\\types\\_collapse.scss","app\\scss\\config\\_variables.scss","..\\node_modules\\include-media\\dist\\_include-media.scss","app\\scss\\config\\_reset.scss","app\\scss\\config\\_base.scss","app\\scss\\helpers\\_utitlties.scss","app\\scss\\components\\_buttons.scss","app\\scss\\components\\_signin.scss","app\\scss\\layout\\_header.scss","app\\scss\\layout\\_hero.scss","app\\scss\\layout\\_feature.scss","app\\scss\\layout\\_works.scss","app\\scss\\layout\\_team.scss","app\\scss\\layout\\_footer.scss"],"names":[],"mappings":"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","file":"src.e31bb0bc.css","sourceRoot":"..\\src","sourcesContent":["@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n// Settings\n// ==================================================\n$hamburger-padding-x           : 15px !default;\n$hamburger-padding-y           : 15px !default;\n$hamburger-layer-width         : 40px !default;\n$hamburger-layer-height        : 4px !default;\n$hamburger-layer-spacing       : 6px !default;\n$hamburger-layer-color         : #000 !default;\n$hamburger-layer-border-radius : 4px !default;\n$hamburger-hover-opacity       : 0.7 !default;\n$hamburger-active-layer-color  : $hamburger-layer-color !default;\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter   : false !default;\n$hamburger-hover-filter       : opacity(50%) !default;\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n$hamburger-types: (\n  3dx,\n  3dx-r,\n  3dy,\n  3dy-r,\n  3dxy,\n  3dxy-r,\n  arrow,\n  arrow-r,\n  arrowalt,\n  arrowalt-r,\n  arrowturn,\n  arrowturn-r,\n  boring,\n  collapse,\n  collapse-r,\n  elastic,\n  elastic-r,\n  emphatic,\n  emphatic-r,\n  minus,\n  slider,\n  slider-r,\n  spin,\n  spin-r,\n  spring,\n  spring-r,\n  stand,\n  stand-r,\n  squeeze,\n  vortex,\n  vortex-r\n) !default;\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n@import \"types/3dx\";\n@import \"types/3dx-r\";\n@import \"types/3dy\";\n@import \"types/3dy-r\";\n@import \"types/3dxy\";\n@import \"types/3dxy-r\";\n@import \"types/arrow\";\n@import \"types/arrow-r\";\n@import \"types/arrowalt\";\n@import \"types/arrowalt-r\";\n@import \"types/arrowturn\";\n@import \"types/arrowturn-r\";\n@import \"types/boring\";\n@import \"types/collapse\";\n@import \"types/collapse-r\";\n@import \"types/elastic\";\n@import \"types/elastic-r\";\n@import \"types/emphatic\";\n@import \"types/emphatic-r\";\n@import \"types/minus\";\n@import \"types/slider\";\n@import \"types/slider-r\";\n@import \"types/spin\";\n@import \"types/spin-r\";\n@import \"types/spring\";\n@import \"types/spring-r\";\n@import \"types/stand\";\n@import \"types/stand-r\";\n@import \"types/squeeze\";\n@import \"types/vortex\";\n@import \"types/vortex-r\";\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n","// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &.is-active {\n    &:hover {\n      @if $hamburger-hover-use-filter == true {\n        filter: $hamburger-active-hover-filter;\n      }\n      @else {\n        opacity: $hamburger-active-hover-opacity;\n      }\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background-color: $hamburger-active-layer-color;\n    }\n  }\n}\n\n.hamburger-box {\n  width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n","// Settings\r\n// ==================================================\r\n// Custom \r\n$hamburger-layer-color: silver;\r\n\r\n$hamburger-padding-x           : 0;\r\n$hamburger-padding-y           : 10px !default;\r\n$hamburger-layer-width         : 35px !default;\r\n$hamburger-layer-height        : 4px !default;\r\n$hamburger-layer-spacing       : 5px !default;\r\n$hamburger-layer-color         : silver;\r\n$hamburger-layer-border-radius : 4px !default;\r\n$hamburger-hover-opacity       : 0.7 !default;\r\n$hamburger-active-layer-color  : silver;\r\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\r\n\r\n// To use CSS filters as the hover effect instead of opacity,\r\n// set $hamburger-hover-use-filter as true and\r\n// change the value of $hamburger-hover-filter accordingly.\r\n$hamburger-hover-use-filter   : false !default;\r\n$hamburger-hover-filter       : opacity(90%) ;\r\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\r\n\r\n// Types (Remove or comment out what you donâ€™t need)\r\n// ==================================================\r\n$hamburger-types: (\r\n  // 3dx,\r\n  // 3dx-r,\r\n  // 3dy,\r\n  // 3dy-r,\r\n  // 3dxy,\r\n  // 3dxy-r,\r\n  // arrow,\r\n  // arrow-r,\r\n  // arrowalt,\r\n  // arrowalt-r,\r\n  // arrowturn,\r\n  // arrowturn-r,\r\n  // boring,\r\n  collapse,\r\n  // collapse-r,\r\n  // elastic,\r\n  // elastic-r,\r\n  // emphatic,\r\n  // emphatic-r,\r\n  // minus,\r\n  // slider,\r\n  // slider-r,\r\n  // spin,\r\n  // spin-r,\r\n  // spring,\r\n  // spring-r,\r\n  // stand,\r\n  // stand-r,\r\n  // squeeze,\r\n  // vortex,\r\n  // vortex-r\r\n);","@if index($hamburger-types, collapse) {\n  /*\n   * Collapse\n   */\n  .hamburger--collapse {\n    .hamburger-inner {\n      top: auto;\n      bottom: 0;\n      transition-duration: 0.13s;\n      transition-delay: 0.13s;\n      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n\n      &::after {\n        top: ($hamburger-layer-spacing * 2 + $hamburger-layer-height * 2) * -1;\n        transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),\n                    opacity 0.1s linear;\n      }\n\n      &::before {\n        transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1),\n                    transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        transform: translate3d(0, ($hamburger-layer-spacing + $hamburger-layer-height) * -1, 0) rotate(-45deg);\n        transition-delay: 0.22s;\n        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n\n        &::after {\n          top: 0;\n          opacity: 0;\n          transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333),\n                      opacity 0.1s 0.22s linear;\n        }\n\n        &::before {\n          top: 0;\n          transform: rotate(-90deg);\n          transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333),\n                      transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);\n        }\n      }\n    }\n  }\n}\n",":root {\r\n    // Colors\r\n    --blue-dark-intro: hsl(217, 28%, 15%);\r\n    --blue-dark-main: hsl(218, 28%, 13%);\r\n    --blue-dark-footer: hsl(216, 53%, 9%);\r\n    --blue-dark-testimonial: hsl(219, 30%, 18%);\r\n\r\n    --cyan-accent: hsl(176, 68%, 64%);\r\n    --blue-accent: hsl(198, 60%, 50%);\r\n    --light: hsla(0, 0%, 100%, 0.8);\r\n\r\n    // Fonts\r\n    --title-font: 'Raleway', sans-serif;\r\n    --body-font: 'Open Sans', sans-serif;\r\n\r\n    --title-font-size: 2.7rem;\r\n    --title2-font-size: 2.4rem;\r\n    --subtitle-font-size: 1.8rem;\r\n    --body-font-size: 1.7rem;\r\n    --small-font-size: 1.5rem;\r\n    --min-font-size: 1.3rem;\r\n\r\n    @include media('>=540px') {\r\n        --title-font-size: 2.9rem;\r\n    }\r\n\r\n    @include media('>=desktop') {\r\n        --title-font-size: 4rem;\r\n        --subtitle-font-size: 2rem;\r\n        --body-font-size: 1.8rem;\r\n        // --small-font-size: 1.rem;\r\n        --min-font-size: 1.4rem;\r\n    }\r\n\r\n\r\n\r\n\r\n    --light-w: 400;\r\n    --bold-w: 700;\r\n\r\n    // General Size\r\n    --max-width: 120rem;\r\n\r\n    --logo-widht:  12rem;\r\n    --logo-height:  5rem;\r\n\r\n    @include media('>=laptop') {\r\n        --logo-widht:  16rem;\r\n        --logo-height:  5rem;\r\n    }\r\n}\r\n\r\n// Sass\r\n$blueDarkIntro: var(--blue-dark-intro);\r\n$blueDarkMain: var(--blue-dark-main);\r\n$blueDarkFooter: var(--blue-dark-footer);\r\n$blueDarkTestimonial: var(--blue-dark-testimonial);\r\n$cyanAccent: var(--cyan-accent);\r\n$blueAccent: var(--blue-accent);\r\n$light: var(--light);\r\n\r\n$titleFont: var(--title-font);\r\n$bodyFont: var(--body-font);\r\n\r\n$titleFontSize: var(--title-font-size);\r\n$title2FontSize: var(--title2-font-size);\r\n$subtitleFontSize: var(--subtitle-font-size);\r\n$bodyFontSize: var(--body-font-size);\r\n$smallFontSize: var(--small-font-size);\r\n$minFontSize: var(--min-font-size);\r\n\r\n$lightW: var(--light-w);\r\n$boldW: var(--bold-w);\r\n\r\n$maxWidth: var(--max-width);\r\n$logoWidht: var(--logo-widht);\r\n$logoHeight: var(--logo-height);\r\n\r\n$zLast: -9999;\r\n$z1: 1;\r\n$z2: 2;\r\n$z3: 3;\r\n$z4: 4;\r\n\r\n// Breakpoints\r\n$breakpoints: (\r\n    'mobile': 320px,\r\n    'tablet': 768px,\r\n    'laptop': 1024px,\r\n    'desktop': 1280px\r\n);","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'laptop': 1024px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `â‰¥`, `â‰¤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', 'â‰¥', 'â‰¤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', 'â‰¤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","html {\r\n    box-sizing: border-box;\r\n    font-size: 62.5%;\r\n    scroll-behavior: smooth;\r\n    // background-color: $dark;\r\n}\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n    box-sizing: inherit;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\nbody {\r\n    font-family: $bodyFontSize;\r\n    background-color: $blueDarkMain;\r\n    color: $light;\r\n    font-family: $bodyFont;\r\n    font-weight: $lightW;\r\n    color: $light;\r\n    overflow-x: hidden;\r\n\r\n    &.no-scroll {\r\n        overflow: hidden;\r\n    }\r\n\r\n    @include media('>=laptop') {\r\n\r\n    }\r\n}\r\nh1, h2, h3, h4 {\r\n    font-family: $titleFont;\r\n    font-weight: $boldW;\r\n    color: white;\r\n    line-height: 1.4;\r\n\r\n}\r\np {\r\n    font-family: $bodyFont;\r\n    font-weight: $lightW;\r\n    line-height: 1.7;\r\n}\r\n\r\nul {\r\n    padding-left: 0;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n}\r\nli {\r\n    list-style: none;\r\n}\r\n\r\na {\r\n    font-weight: $lightW;\r\n    text-decoration: none;\r\n    color: $light;\r\n    transition: all .3s ease-in-out;\r\n    cursor: pointer;\r\n\r\n    &:hover{color: $cyanAccent;}\r\n}\r\n\r\nimg {\r\n    max-width: 100%;\r\n    width: 100%;\r\n    height: auto;\r\n}\r\n",".b {\r\n    // Container\r\n    &-box {\r\n        max-width: 120rem;\r\n        margin: 0 auto;\r\n    \r\n        &--pall {\r\n            padding-top: 2.5rem;\r\n            padding-bottom: 2.5rem;\r\n            padding-left: 4rem;\r\n            padding-right: 4rem;\r\n\r\n            @include media('>=laptop') {\r\n                padding-top: 5rem;\r\n                padding-bottom: 5rem;\r\n                padding-left: 10rem;\r\n            padding-right: 10rem;\r\n            }\r\n    \r\n            @include media('>=120rem') {\r\n                \r\n                padding-left: 0;\r\n                padding-right: 0;\r\n            }\r\n            @include media('>=laptop') {\r\n                // --size: 26rem;\r\n                padding-left: 18rem;\r\n                padding-right: 18rem;\r\n            }\r\n        }\r\n    \r\n        &--py {\r\n            padding-top: 5rem;\r\n            padding-bottom: 5rem;\r\n    \r\n            @include media('>=laptop') {\r\n                padding-top: 5rem;\r\n                padding-bottom: 5rem;\r\n            }\r\n        }\r\n        &--px {\r\n            padding-left: 5rem;\r\n            padding-right: 5rem;\r\n        }\r\n    \r\n        &--pt {\r\n            padding-top: 5rem;\r\n            \r\n            @include media('>=laptop') {\r\n                padding-top: 5rem;\r\n                \r\n            }\r\n        }\r\n        &--pb {\r\n            padding-bottom: 5rem;\r\n    \r\n            @include media('>=laptop') {\r\n                padding-bottom: 5rem;\r\n                \r\n            }\r\n        }\r\n        &--pl {padding-left: 5.5rem;}\r\n        &--pr {padding-right: 5.5rem;}\r\n    \r\n    }\r\n\r\n    // Text\r\n    &-tx {\r\n        // Logo text\r\n        &-subtitle {\r\n            font-size: $subtitleFontSize;\r\n        }\r\n\r\n        &-body {\r\n            font-size: $bodyFontSize;\r\n        }\r\n        &-sub {\r\n            font-size: $minFontSize;\r\n        }\r\n    }\r\n    &-hd {\r\n        &1 {\r\n            font-size: $titleFontSize;\r\n            margin-top: rfs(2rem);\r\n            margin-bottom: rfs(3rem);\r\n            \r\n        }\r\n\r\n        &2 {\r\n            font-size: $title2FontSize;\r\n            margin-bottom: rfs(5rem);\r\n\r\n        }\r\n\r\n        &3 {\r\n            font-size: 1rem;\r\n            margin-bottom: rfs(1rem);\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\n.dark-overlay {\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgba(0,0,0, .7);    \r\n}\r\n",".u {\r\n    \r\n    // Responsive Grid \r\n    &-responsiveGrid {\r\n        display: grid;\r\n        gap: 1em;\r\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n    }\r\n        \r\n    // Resposive Flexbox\r\n    &-responsiveFlex {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    \r\n        & > * {\r\n            flex: 1 1 200px;\r\n        }\r\n    }\r\n\r\n    &-round-img {\r\n        border-radius: 50%;\r\n    }\r\n    &-tx-center {\r\n        text-align: center;\r\n    }\r\n    &-line {\r\n        height: 3px;\r\n        width: 30%;\r\n        background-color: #ccc;\r\n        margin: 4rem auto;\r\n    }\r\n\r\n\r\n    // Backgrounds  \r\n    &-bg {\r\n        &--intro {\r\n            background-color: $blueDarkIntro;\r\n        }\r\n        &--main {\r\n            background-color: $blueDarkMain;\r\n        }\r\n        &--testimonial {\r\n            background-color: $blueDarkTestimonial;\r\n        }\r\n        &--footer {\r\n            background-color: $blueDarkFooter;\r\n        } \r\n    }\r\n    \r\n    // Visibility\r\n    &-none { display: none; }\r\n    &-invisible { overflow: hidden; }\r\n\r\n    &-hide-for-mobile {\r\n        // Hide for tablet and mobile\r\n        @include media('<tablet') {\r\n            display: none!important;\r\n        }\r\n    }\r\n    &-hide-for-desktop {\r\n        // Hide for desktop viewport widths\r\n        @include media('>=tablet') {\r\n            display: none!important;\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n}",".btn {\r\n    display: block;\r\n    border: none;\r\n    \r\n    &--cta {\r\n        margin: 3rem auto;\r\n        font-size: $subtitleFontSize;\r\n        padding: 1.8rem;\r\n        width: 80%;\r\n        border-radius: 4rem;\r\n        color: white;\r\n        cursor: pointer;\r\n        background-image: linear-gradient(to right, $cyanAccent, $blueAccent);\r\n\r\n        transition: transform .2s ease-in-out, background-image .2s ease-in-out;\r\n\r\n        @include media('<tablet') {\r\n            position: relative;\r\n            z-index: $z4;\r\n        }\r\n\r\n        @include media('>=tablet') {\r\n            width: 40%;\r\n        }\r\n\r\n        @include media('>=laptop') {\r\n    \r\n            &:hover {\r\n                transform: scale(1.02);\r\n                background-image: linear-gradient(to right top, $cyanAccent, $blueAccent);\r\n            }\r\n        }\r\n    }\r\n\r\n    &--link {\r\n        display: inline-block;\r\n        padding-bottom: .5rem;\r\n        font-size: $bodyFontSize;\r\n        color: $cyanAccent;\r\n        border-bottom: 1px solid $cyanAccent;\r\n\r\n        &:hover {\r\n            border-bottom: 1px solid $light;\r\n        }\r\n\r\n        &::after {\r\n            content: '';\r\n            display: inline-block;\r\n            width: 2.2rem;\r\n            height: 2.2rem;\r\n\r\n            margin-left: 5px;\r\n            margin-bottom: -5px;\r\n\r\n            background-image: url(../../img/icon-arrow.svg);\r\n\r\n            background-repeat: no-repeat;\r\n            background-position: center ;\r\n            background-size: contain;\r\n        }\r\n    }\r\n}",".signin {\r\n    position: absolute;\r\n    top: -250px;\r\n    left: 0;\r\n\r\n    \r\n\r\n    background-color: $blueDarkIntro;\r\n    padding: 6rem 4rem;\r\n    border-radius: 15px;\r\n    text-align: center;\r\n\r\n    @include media('>=laptop') {\r\n        top: -180px;\r\n        padding: 6rem 5rem;\r\n    }\r\n    @include media('>=desktop') {\r\n        padding: 6rem 8rem;\r\n    }\r\n\r\n\r\n    &-container {\r\n        position: relative;\r\n        --size: 2rem;\r\n        margin-top: 40rem;\r\n        margin-left: var(--size);\r\n        margin-right: var(--size);\r\n\r\n        @include media('>=tablet') {\r\n            --size: 12rem\r\n        }\r\n        @include media('>=laptop') {\r\n            --size: 18rem\r\n        }\r\n    }\r\n\r\n    &__title,\r\n    &__desc {\r\n        margin-bottom: 3rem;\r\n    }\r\n    &__input,\r\n    &__btn {\r\n        width: 100%;\r\n    }\r\n\r\n    &__title {\r\n        @include media('>=laptop') {\r\n            margin-top: 0;\r\n        }\r\n    }\r\n\r\n    &__form {\r\n        @include media('>=laptop') {\r\n            margin-top: 4rem;\r\n        }\r\n    }\r\n\r\n    &__input {\r\n        padding: 1.8rem;\r\n        border-radius: 4rem;\r\n        border: none;\r\n        color: gray;\r\n\r\n        @include media('>=laptop') {\r\n            padding-top: 0;\r\n            padding-bottom: 0;\r\n            width: 60%;\r\n        }\r\n        @include media('>=desktop') {\r\n            width: 65%;\r\n        }\r\n    }\r\n\r\n    &__btn {\r\n        margin-bottom: 0;\r\n\r\n        @include media('>=laptop') {\r\n            width: 35%;\r\n            margin: 0;\r\n        }\r\n\r\n        @include media('>=desktop') {\r\n            width: 30%;\r\n        }\r\n    }\r\n\r\n\r\n}",".header {\r\n    --hide: hidden;\r\n    background-color: $blueDarkIntro;\r\n    \r\n    \r\n    &.open {\r\n        .overlay {\r\n            visibility: initial;\r\n        }\r\n\r\n        .header__nav-list {\r\n            transform: translateX(0%);\r\n        }\r\n    }\r\n\r\n    // Overlay by Defect\r\n    .overlay {\r\n        position: fixed;\r\n        z-index: $z1;\r\n        \r\n        top: 5rem;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n      \r\n        background-image: linear-gradient(to right,$blueDarkIntro, salmon);\r\n        \r\n        transition: visibility 1s ;\r\n        transition: all 1s;\r\n        visibility: hidden;\r\n    }\r\n\r\n    &__logo {\r\n        width: $logoWidht;\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        @include media('>=laptop', '<desktop') {\r\n            margin-left: 2rem;         \r\n        }\r\n    }\r\n\r\n    &__nav {\r\n        @include media('>=laptop') {\r\n            padding-left: 0rem;\r\n            padding-right: 0rem;\r\n        }\r\n\r\n        &-list {\r\n            position: absolute;\r\n            z-index: $z4;\r\n            bottom: 0;\r\n            left: 0;\r\n            width: 100vw;\r\n            height: 80%;\r\n            background-color: $blueDarkMain;\r\n            padding: 4rem;\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-around;\r\n\r\n            transform: translateX(-100%);\r\n            transition: transform .3s ease-in-out;\r\n\r\n            @include media('>=tablet') {\r\n                position: relative;\r\n                bottom: initial;\r\n                left: initial;\r\n                width: 38%;\r\n                height: initial;\r\n                padding: 0;\r\n                background-color: $blueDarkIntro;\r\n                \r\n                flex-direction: row;\r\n                transform: translate(0);\r\n            }\r\n        }\r\n\r\n        &-item {\r\n            border-bottom: 1px solid $light;\r\n            width: 100%;\r\n            \r\n            @include media('>=tablet') {\r\n                display: flex;\r\n                justify-content: space-evenly;\r\n                border-bottom: none;\r\n\r\n                \r\n            }\r\n        }\r\n        &-link {\r\n            display: block;\r\n            font-size: 2rem;\r\n            border-bottom: 1px solid transparent;\r\n\r\n            @include media('>=tablet') {\r\n                font-size: $subtitleFontSize;\r\n                padding-bottom: 2px;\r\n\r\n                &:hover {\r\n                    border-bottom: 1px solid $light;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".hero {\r\n    position: relative;\r\n    background-color: $blueDarkIntro;\r\n    z-index: $z3;\r\n    --size: 0;\r\n    --sizeImg: 100%;\r\n\r\n    padding-left: var(--size);\r\n    padding-right: var(--size);\r\n\r\n    @include media('>=tablet') {\r\n        --size: 5rem;\r\n    }\r\n    @include media('>=laptop') {\r\n        --size: 15rem;\r\n    }\r\n\r\n    &__img {\r\n        margin: 0 auto;\r\n        width: var(--sizeImg);\r\n\r\n        @include media('>=510px') {\r\n            --sizeImg: 70%;\r\n        }\r\n    }\r\n\r\n    &__bg {\r\n        &-container {\r\n\r\n            position: absolute;\r\n            z-index: $zLast;\r\n            width: 100%;\r\n            height: 100vh;\r\n        }\r\n        &::before,\r\n        &::after {\r\n            content: '';\r\n            display: block;\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            z-index: $zLast;\r\n            width: 100vw;\r\n            height: 100%;\r\n    \r\n            background-size: contain;\r\n    \r\n            background-repeat: no-repeat;\r\n        }\r\n    \r\n        &::before {\r\n            background-image: url(../../img/bg-curvy-mobile.svg);\r\n            background-position: center 55vw;\r\n            \r\n            @include media('>=tablet') {\r\n                background-position: center 20vw;\r\n            }\r\n    \r\n        }\r\n    \r\n        &::after {\r\n            --sizeBg: 90vw;\r\n            background-image: linear-gradient(to bottom, transparent var(--sizeBg), $blueDarkMain var(--sizeBg));\r\n    \r\n            @include media('>=tablet') {\r\n                --sizeBg: 55vw;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    &-container {\r\n        @include media('>=tablet') {\r\n            padding-top: 0;\r\n        }\r\n    }\r\n    \r\n    \r\n\r\n}",".feature {\r\n    align-items: baseline;\r\n    gap: 8rem;\r\n\r\n    @include media('>=laptop') {\r\n        column-gap: 10rem;\r\n    }\r\n\r\n    &__item {\r\n        padding-bottom: 2rem;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        text-align: center;\r\n        \r\n        border-bottom: 1px solid transparent;\r\n        transition: border-bottom .5s;\r\n        \r\n        &:hover {\r\n            border-bottom: 1px solid white;\r\n        }\r\n    }\r\n\r\n    &__img {\r\n        width: 8rem;\r\n        margin-bottom: 3rem;\r\n\r\n        &.shield {\r\n            width: 7rem;\r\n        }\r\n    }\r\n\r\n    &__title {\r\n        font-size: $title2FontSize;\r\n        margin-bottom: 1.5rem;\r\n    }\r\n\r\n    &__desc {\r\n        font-size: $smallFontSize;\r\n        \r\n    }\r\n}",".works {\r\n    margin: 10rem auto;\r\n    \r\n    &__img {\r\n        margin: 0 auto;\r\n        margin-bottom: 4rem;\r\n\r\n        @include media('>=520px', '<tablet') {\r\n            width: 65vw;\r\n        }\r\n    }\r\n\r\n    &__title {\r\n        font-size: $title2FontSize;\r\n        margin-bottom: 3rem;\r\n\r\n        @include media('>=laptop') {\r\n            font-size: 3.8rem;\r\n        }\r\n    }\r\n\r\n    &__desc {\r\n        font-size: $bodyFontSize;\r\n        margin-bottom: 2rem;\r\n    }\r\n}",".team {\r\n    margin-top: 15rem;\r\n    margin-bottom: 10rem;\r\n\r\n    $size: 3rem;\r\n\r\n    // grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));\r\n\r\n    &__card {\r\n        padding: $size;\r\n        // margin-top: $size;\r\n        position: relative;\r\n        border-radius: 10px;\r\n\r\n        background-color: $blueDarkTestimonial;\r\n\r\n        transition: transform .3s ease-in-out;\r\n        \r\n        @include media('>=tablet') {\r\n            &:hover { transform: scale(1.03); }\r\n        }\r\n\r\n        &:first-of-type::before{\r\n            content: '';\r\n            display: block;\r\n            position: absolute;\r\n            top: -$size + 0.1;\r\n            left: 10px;\r\n            width: $size;\r\n            height: $size;\r\n    \r\n            background-image: url(../../img/bg-quotes.png);\r\n            background-repeat: no-repeat;\r\n            background-position: center;\r\n            background-size: contain;\r\n        }\r\n    }\r\n\r\n    &__desc {\r\n        font-size: $smallFontSize;\r\n        margin-bottom: $size;\r\n        line-height: 1.9;\r\n    }\r\n\r\n    &__bio {\r\n        \r\n        &-img {\r\n            width: 4.5rem;\r\n            margin-right: 1.5rem;\r\n        }\r\n\r\n        &-info {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: space-evenly;\r\n        }\r\n\r\n        &-title {\r\n            font-size: $smallFontSize;\r\n            font-weight: $boldW;\r\n        }\r\n        \r\n        &-position {\r\n            font-size: $minFontSize;\r\n            font-weight: $lightW;\r\n        }\r\n    }\r\n}",".footer {\r\n    \r\n    &-container {\r\n        padding-top: 40rem;\r\n\r\n        @include media('>=460px') {\r\n            padding-top: 30rem;\r\n        }\r\n    }\r\n    &__desc-container {\r\n        display: flex;\r\n        align-items: flex-start;\r\n        margin: 2rem 0;\r\n    }\r\n    \r\n    &__icon {\r\n        min-width: 1.6rem;\r\n        width: 2rem;\r\n        margin-right: 3rem;\r\n        padding-top: 1rem;\r\n    }\r\n\r\n    &__info {\r\n        &-logo {\r\n            width: $logoWidht;\r\n            margin-top: 2rem;\r\n        }\r\n\r\n    }\r\n\r\n    &__links {\r\n        padding-top: 2rem;\r\n\r\n        @include media('>=laptop') {\r\n            transform: translateX(6rem);\r\n        }\r\n\r\n        p {\r\n            margin-bottom: 2rem;\r\n            a {\r\n                border-bottom: 1px solid transparent;\r\n                padding-bottom: 1rem;\r\n    \r\n                &:hover {\r\n                    border-bottom: 1px solid white;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    &__socialIcons {\r\n        font-size: 2.5rem;\r\n        a:not(:last-of-type) {\r\n            margin-right: 3rem;\r\n        }\r\n    }\r\n\r\n    &__atribution {\r\n        padding: 1rem 4rem;\r\n        margin-top: 3rem;\r\n        background-color: darken(hsl(216, 53%, 9%), 2.5%);\r\n        \r\n        font-size: 1.3rem;\r\n        text-align: center;\r\n\r\n        @include media('>=laptop') {\r\n            padding: 1rem 5rem;\r\n            font-size: 1.4rem;\r\n        }\r\n\r\n        a {\r\n            color: $cyanAccent;\r\n\r\n            border-bottom: none;\r\n\r\n            &:hover {\r\n                border-bottom: 1px solid white;\r\n            }\r\n        }\r\n    }\r\n}"]}